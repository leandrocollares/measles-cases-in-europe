{"version":3,"sources":["components/Axis.js","components/Bar.js","components/BarLabel.js","components/Tooltip.js","components/BarChart.js","data.js","App.js","serviceWorker.js","index.js"],"names":["Axis","orientation","scale","xTransform","yTransform","className","axisRef","useRef","useEffect","d3","current","call","ref","transform","Bar","props","BarLabel","x","y","dx","dy","text","formattedText","decimalSeparator","Tooltip","hovered","yScale","marginLeft","marginTop","country","styles","cases","population","incidenceRate","deaths","style","margin","width","height","BarChart","data","useState","hoveredBar","setHoveredBar","onBarHover","bar","sortedData","sort","a","b","xScale","domain","d","rangeRound","nice","map","padding","Fragment","key","bandwidth","onMouseEnter","onMouseLeave","App","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qRAkCeA,EA9BF,SAAC,GAMP,IALLC,EAKI,EALJA,YACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,WACAC,EACI,EADJA,UAEMC,EAAUC,iBAAO,MAMvB,OAJAC,qBAAU,WACRC,SAAUH,EAAQI,SAASC,KAAKF,EAAG,OAAD,OAAQR,IAAeC,MACxD,CAACD,EAAaC,IAGf,uBACEU,IAAKN,EACLO,UAAS,oBAAeV,EAAf,aAA8BC,EAA9B,KACTC,UAAWA,KCTFS,EATH,SAACC,GAAD,OAAW,0CAAUA,EAAV,CAAiBV,UAAU,WC2BnCW,EA3BE,SAACD,GAAW,IAEzBE,EACEF,EADFE,EAAGC,EACDH,EADCG,EAAGC,EACJJ,EADII,GAAIC,EACRL,EADQK,GAAIC,EACZN,EADYM,KAEVC,GAAgBC,EADlBR,EADkBQ,kBAEiBF,GACvC,OACE,0BACEJ,EAAGA,EACHC,EAAGA,EACHC,GAAIA,EACJC,GAAIA,EACJf,UAAU,YAETiB,ICgCQE,EA7CC,SAAC,GAEV,IADLC,EACI,EADJA,QAASC,EACL,EADKA,OAAQC,EACb,EADaA,WAAYC,EACzB,EADyBA,UAAWL,EACpC,EADoCA,iBAElCN,EAAI,GAAKU,EACTT,EAAIQ,EAAOD,EAAQI,SAAWD,EAE9BE,EAAS,CACbjB,UACE,oCACmBI,EADnB,+BAEmBC,EAFnB,OAGG,KAGDW,EAAO,UAAMJ,EAAQI,SACrBE,EAAK,yBAAqBR,EAAiBE,EAAQM,QACnDC,EAAU,sBAAkBT,EAAiBE,EAAQO,aACrDC,EAAa,0BAAsBR,EAAQQ,cAA9B,YACbC,EAAM,kBAAcT,EAAQS,QAElC,OACE,yBAAK7B,UAAU,UAAU8B,MAAOL,GAC9B,yBAAKzB,UAAU,kBAAkBwB,GACjC,6BAAME,GACN,6BAAMC,GACN,6BAAMC,GACN,6BAAMC,KCrBNE,EACC,GADDA,EAEG,GAFHA,EAGI,IAHJA,EAIE,IAEFC,EAAQ,IAAMD,EAAcA,EAC5BE,EAAS,IAAMF,EAAaA,EAE5Bb,EAAmBd,SAAU,KA4FpB8B,EA1FE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACOC,mBAAS,MADhB,mBACtBC,EADsB,KACVC,EADU,KAGvBC,EAAa,SAACC,GAAD,OAAS,WAC1BF,EAAcE,KAGVC,EAAaN,EAAKO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEjB,MAAQkB,EAAElB,SAE7CmB,EAASzC,gBAEZ0C,OAAO,CAAC,EAAG1C,MAAOqC,GAAY,SAACM,GAAD,OAAOA,EAAErB,WACvCsB,WAAW,CAAC,EAAGhB,IACfiB,OAEG5B,EAASjB,cAEZ0C,OAAOL,EAAWS,KAAI,SAACH,GAAD,OAAOA,EAAEvB,YAC/BwB,WAAW,CAACf,EAAQ,IACpBkB,QAAQ,KAEX,OACE,yBAAKnD,UAAU,YACb,yBACEA,UAAU,QACVgC,MAAOA,EAAQD,EAAcA,EAC7BE,OAAQA,EAASF,EAAaA,GAE9B,uBAAGvB,UAAS,oBAAeuB,EAAf,aAA+BA,EAA/B,MACTI,EAAKe,KAAI,SAACH,GAAD,OACR,kBAAC,IAAMK,SAAP,CAAgBC,IAAKN,EAAEvB,SACrB,kBAAC,EAAD,CACEZ,EAAG,EACHC,EAAGQ,EAAO0B,EAAEvB,SACZQ,MAAOa,EAAOE,EAAErB,OAChBO,OAAQZ,EAAOiC,YACfC,aAAchB,EAAWQ,GACzBS,aAAcjB,EAAW,QAE3B,kBAAC,EAAD,CACE3B,EAAGiC,EAAOE,EAAErB,OAAS,GACrBb,EAAGQ,EAAO0B,EAAEvB,SACZV,GAAG,SACHC,GAAG,QACHC,KAAM+B,EAAErB,MACRR,iBAAkBA,QAIxB,kBAAC,EAAD,CACEtB,YAAY,SACZC,MAAOgD,EACP/C,WAAY,EACZC,WAAYkC,EACZjC,UAAU,UAEZ,kBAAC,EAAD,CACEJ,YAAY,OACZC,MAAOwB,EACPvB,WAAY,EACZC,WAAY,EACZC,UAAU,YAIfqC,EACC,kBAAC,EAAD,CACEjB,QAASiB,EACThB,OAAQA,EACRC,WAAYS,EACZR,UAAWQ,EACXb,iBAAkBA,IAElB,OC5FK,GACX,CACEM,QAAS,UACTE,MAAO,KACPC,WAAY,QACZC,cAAe,OACfC,OAAQ,GAEV,CACEL,QAAS,SACTE,MAAO,KACPC,WAAY,SACZC,cAAe,MACfC,OAAQ,GAEV,CACEL,QAAS,UACTE,MAAO,KACPC,WAAY,QACZC,cAAe,OACfC,OAAQ,GAEV,CACEL,QAAS,SACTE,MAAO,KACPC,WAAY,SACZC,cAAe,OACfC,OAAQ,GAEV,CACEL,QAAS,SACTE,MAAO,KACPC,WAAY,QACZC,cAAe,OACfC,OAAQ,GAEV,CACEL,QAAS,QACTE,MAAO,KACPC,WAAY,SACZC,cAAe,KACfC,OAAQ,GAEV,CACEL,QAAS,UACTE,MAAO,KACPC,WAAY,SACZC,cAAe,OACfC,OAAQ,IAEV,CACEL,QAAS,SACTE,MAAO,KACPC,WAAY,UACZC,cAAe,MACfC,OAAQ,GAEV,CACEL,QAAS,SACTE,MAAO,KACPC,WAAY,QACZC,cAAe,OACfC,OAAQ,IAEV,CACEL,QAAS,UACTE,MAAO,MACPC,WAAY,SACZC,cAAe,QACfC,OAAQ,KCpCC4B,G,MA5BH,kBACV,yBAAKzD,UAAU,OACb,yBAAKA,UAAU,SACb,4BACG,IADH,4DAIA,2BACG,IADH,8DAGG,IACD,uBACE0D,KAAK,sHACLC,OAAO,SACPC,IAAI,uBAHN,4DAOC,IAXH,8IAiBF,kBAAC,EAAD,CAAUzB,KAAMA,OCjBA0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.52cc7233.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst Axis = ({\n  orientation,\n  scale,\n  xTransform,\n  yTransform,\n  className,\n}) => {\n  const axisRef = useRef(null);\n\n  useEffect(() => {\n    d3.select(axisRef.current).call(d3[`axis${orientation}`](scale));\n  }, [orientation, scale]);\n\n  return (\n    <g\n      ref={axisRef}\n      transform={`translate(${xTransform}, ${yTransform})`}\n      className={className}\n    />\n  );\n};\n\nAxis.propTypes = {\n  orientation: PropTypes.oneOf(['Top', 'Right', 'Bottom', 'Left']),\n  scale: PropTypes.func,\n  xTransform: PropTypes.number,\n  yTransform: PropTypes.number,\n  className: PropTypes.string,\n};\n\nexport default Axis;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Bar = (props) => <rect {...props} className=\"rect\" />;\n\nBar.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nexport default Bar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BarLabel = (props) => {\n  const {\n    x, y, dx, dy, text, decimalSeparator,\n  } = props;\n  const formattedText = decimalSeparator(text);\n  return (\n    <text\n      x={x}\n      y={y}\n      dx={dx}\n      dy={dy}\n      className=\"barLabel\"\n    >\n      {formattedText}\n    </text>\n  );\n};\n\nBarLabel.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  dx: PropTypes.string,\n  dy: PropTypes.string,\n  text: PropTypes.number,\n  decimalSeparator: PropTypes.func,\n};\n\nexport default BarLabel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tooltip = ({\n  hovered, yScale, marginLeft, marginTop, decimalSeparator,\n}) => {\n  const x = 50 + marginLeft;\n  const y = yScale(hovered.country) + marginTop;\n\n  const styles = {\n    transform:\n      'translate('\n       + `calc( -25% + ${x}px),`\n       + `calc(-100% + ${y}px)`\n       + ')',\n  };\n\n  const country = `${hovered.country}`;\n  const cases = `measles cases: ${decimalSeparator(hovered.cases)}`;\n  const population = `population: ${decimalSeparator(hovered.population)}`;\n  const incidenceRate = `incidence rate: ${hovered.incidenceRate}/million`;\n  const deaths = `deaths: ${hovered.deaths}`;\n\n  return (\n    <div className=\"tooltip\" style={styles}>\n      <div className=\"tooltipCountry\">{country}</div>\n      <div>{cases}</div>\n      <div>{population}</div>\n      <div>{incidenceRate}</div>\n      <div>{deaths}</div>\n    </div>\n  );\n};\n\nTooltip.propTypes = {\n  hovered: PropTypes.shape({\n    country: PropTypes.string,\n    cases: PropTypes.number,\n    population: PropTypes.number,\n    incidenceRate: PropTypes.number,\n    deaths: PropTypes.number,\n  }),\n  yScale: PropTypes.func,\n  marginLeft: PropTypes.number,\n  marginTop: PropTypes.number,\n  decimalSeparator: PropTypes.func,\n};\n\nexport default Tooltip;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport Axis from './Axis';\nimport Bar from './Bar';\nimport BarLabel from './BarLabel';\nimport Tooltip from './Tooltip';\n\nconst margin = {\n  top: 30,\n  right: 50,\n  bottom: 110,\n  left: 110,\n};\nconst width = 900 - margin.left - margin.right;\nconst height = 480 - margin.top - margin.bottom;\n\nconst decimalSeparator = d3.format(',');\n\nconst BarChart = ({ data }) => {\n  const [hoveredBar, setHoveredBar] = useState(null);\n\n  const onBarHover = (bar) => () => {\n    setHoveredBar(bar);\n  };\n\n  const sortedData = data.sort((a, b) => a.cases - b.cases);\n\n  const xScale = d3\n    .scaleLinear()\n    .domain([0, d3.max(sortedData, (d) => d.cases)])\n    .rangeRound([0, width])\n    .nice();\n\n  const yScale = d3\n    .scaleBand()\n    .domain(sortedData.map((d) => d.country))\n    .rangeRound([height, 0])\n    .padding(0.05);\n\n  return (\n    <div className=\"barChart\">\n      <svg\n        className=\"chart\"\n        width={width + margin.left + margin.right}\n        height={height + margin.top + margin.bottom}\n      >\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          {data.map((d) => (\n            <React.Fragment key={d.country}>\n              <Bar\n                x={0}\n                y={yScale(d.country)}\n                width={xScale(d.cases)}\n                height={yScale.bandwidth()}\n                onMouseEnter={onBarHover(d)}\n                onMouseLeave={onBarHover(null)}\n              />\n              <BarLabel\n                x={xScale(d.cases) + 10}\n                y={yScale(d.country)}\n                dx=\"-.32em\"\n                dy=\"1.4em\"\n                text={d.cases}\n                decimalSeparator={decimalSeparator}\n              />\n            </React.Fragment>\n          ))}\n          <Axis\n            orientation=\"Bottom\"\n            scale={xScale}\n            xTransform={0}\n            yTransform={height}\n            className=\"xAxis\"\n          />\n          <Axis\n            orientation=\"Left\"\n            scale={yScale}\n            xTransform={0}\n            yTransform={0}\n            className=\"yAxis\"\n          />\n        </g>\n      </svg>\n      {hoveredBar ? (\n        <Tooltip\n          hovered={hoveredBar}\n          yScale={yScale}\n          marginLeft={margin.left}\n          marginTop={margin.top}\n          decimalSeparator={decimalSeparator}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nBarChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      country: PropTypes.string,\n      cases: PropTypes.number,\n      population: PropTypes.number,\n      incidenceRate: PropTypes.number,\n      deaths: PropTypes.number,\n    }),\n  ),\n};\n\nexport default BarChart;\n","export default [\n    {\n      country: 'Albania',\n      cases: 1466,\n      population: 2880917,\n      incidenceRate: 508.54,\n      deaths: 3,\n    },\n    {\n      country: 'France',\n      cases: 2919,\n      population: 65129728,\n      incidenceRate: 44.91,\n      deaths: 4,\n    },\n    {\n      country: 'Georgia',\n      cases: 2203,\n      population: 3996765,\n      incidenceRate: 550.35,\n      deaths: 3,\n    },\n    {\n      country: 'Greece',\n      cases: 2193,\n      population: 10473455,\n      incidenceRate: 208.42,\n      deaths: 2,\n    },\n    {\n      country: 'Israel',\n      cases: 3160,\n      population: 8519377,\n      incidenceRate: 377.02,\n      deaths: 0,\n    },\n    {\n      country: 'Italy',\n      cases: 2686,\n      population: 60550075,\n      incidenceRate: 44.30,\n      deaths: 9,\n    },\n    {\n      country: 'Romania',\n      cases: 6397,\n      population: 19364557,\n      incidenceRate: 327.95,\n      deaths: 22,\n    },\n    {\n      country: 'Russia',\n      cases: 2290,\n      population: 145872256,\n      incidenceRate: 15.71,\n      deaths: 1,\n    },\n    {\n      country: 'Serbia',\n      cases: 5076,\n      population: 8772235,\n      incidenceRate: 576.64,\n      deaths: 14,\n    },\n    {\n      country: 'Ukraine',\n      cases: 53218,\n      population: 43993638,\n      incidenceRate: 1202.77,\n      deaths: 15,\n    },\n  ];  ","import React from 'react';\nimport BarChart from './components/BarChart';\nimport data from './data';\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"intro\">\n      <h1>\n        {' '}\n        Reported measles cases in the WHO European Region (2019)\n      </h1>\n      <p>\n        {' '}\n         The ten countries listed below account for about 92% of the\n        {' '}\n        <a\n          href=\"http://www.euro.who.int/__data/assets/pdf_file/0005/418352/2019-10-Epi_Data_EN_October-2018-September-2019.pdf?ua=1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n         88,692 measles cases reported in the WHO European Region\n        </a>\n        {' '}\n        between January and September, 2019. Over 60% of the\n        cases were reported in Ukraine. Hover the pointer\n        over bars for further information.\n      </p>\n    </div>\n    <BarChart data={data} />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}